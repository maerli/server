{"version":3,"sources":["maresia.jpg","comp/Modal.js","comp/Pedidos.js","comp/Card.js","comp/Home.js","comp/Sobre.js","comp/Users.js","comp/Produtos.js","comp/Mesas.js","comp/Auth.js","comp/Categorias.js","comp/Mobile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Modal","className","href","id","this","props","title","data","Component","url","window","location","protocol","hostname","Pedidos","state","pedidos","mesas","categorias","sprodutos","mesa","garcon","localStorage","getItem","Date","now","status","total","produtos","search","socket","socketIOClient","produto","preco","is_product","i","p","slice","id_produto","quantidade","concat","console","log","setState","categoria","fetch","req","json","res","sproduto","onClick","_makePedido","bind","key","nome","toFixed","push","scategoria","_getProduto","id_categoria","nurl","req1","res1","pedido","prod","JSON","parse","reverse","ap","style","fontSize","spedido","id_pedido","req2","res2","smesa","_getCategorias","id_mesa","value","_pedidos","on","a","async","method","headers","body","stringify","_insertPedido","map","_click","event","target","display","_table","type","placeholder","onChange","_change","Card","arquivado","coluna1","value1","coluna2","value2","emit","_preparar","src","maresia","Home","Sobre","Users","g","id_garco","sobrenome","document","querySelector","senha","dados","_addGarcon","Produtos","descricao","img","_insertProduto","Mesas","styles","_insertMesa","border","padding","borderRadius","margin","cursor","Auth","user","getIytem","setItem","alert","_signin","_login","Categorias","_insertCategoria","Mobile","aquivado","addEventListener","elems","querySelectorAll","M","init","App","app","to","path","exact","component","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d0403aa7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maresia.cc2c0c6d.jpg\";","import React,{Component} from 'react'\nexport default class Modal extends Component{\nrender(){\n\treturn (\n\t\t <div>\n\t\t\t<a className=\"waves-effect waves-light btn modal-trigger\" href=\"#modal1\">Modal</a>\n\n\t\t\t  <div id=\"modal1\" className=\"modal\">\n\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t  <h4>{this.props.title}</h4>\n\t\t\t\t  <p>{this.props.data}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t  <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Fechar</a>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t </div>\n\t)\n}\n}\n","import React,{Component} from 'react'\nimport '../css/pedidos.css'\nimport Modal from './Modal'\nimport socketIOClient from \"socket.io-client\"\n\nconst url = window.location.protocol + \"//\" +window.location.hostname + ':4000'\nexport default class Pedidos extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tpedidos:null,mesas:null,categorias:null,sprodutos:null,\n\t\t\tmesa:null,\n\t\t\tgarcon:localStorage.getItem('user'),\n\t\t\tdata:Date.now(),\n\t\t\tstatus:0,\n\t\t\ttotal:0,\n\t\t\tprodutos:[],\n\t\t\ttitle:\"atual\",\n\t\t\tsearch:'',\n\t\t\tsocket:socketIOClient(url)\n\t\t\t}\n\t}\n\tasync _makePedido(produto){\n\t\tvar total = produto.preco\n\t\tlet is_product = false\n\t\tlet p;\n\t\tfor(let i in this.state.produtos){\n\t\t\tp = this.state.produtos.slice()\n\t\t\tif(p[i].id_produto == produto.id_produto){\n\t\t\t\tp[i].quantidade += 1\n\t\t\t\tis_product = true\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif(!is_product){\n\t\t\tproduto.quantidade = 1\n\t\t\tp = this.state.produtos.slice()\n\t\t\tp = p.concat(produto)\n\t\t\tconsole.log(p)\n\t\t}\n\t\t\n\t\tthis.setState({produtos:p,total:this.state.total + total})\n\t}\n\tasync _getProduto(categoria){\n\t\tlet req = await fetch(url + '/database/produtos')\n\t\tlet res = await req.json()\n\t\tvar sprodutos = []\n\t\tfor(let produto of res){\n\t\t\tvar sproduto = <div className=\"hand\" onClick={this._makePedido.bind(this,produto)} key={produto.id_produto}> {produto.nome} R$ {produto.preco.toFixed(2)}</div>\n\t\t\tsprodutos.push(sproduto)\n\t\t}\n\t\tthis.setState({sprodutos,categoria,title:\"Produtos\",data:sprodutos})\n\t}\n\tasync _getCategorias(mesa){\n\t\tlet req = await fetch(url + '/database/categorias')\n\t\tlet res = await req.json()\n\t\tvar categorias = []\n\t\tfor(let categoria of res){\n\t\t\tvar scategoria = <div className=\"hand\" onClick={this._getProduto.bind(this,categoria.nome)} key={categoria.id_categoria}>\n\t\t\t {categoria.nome} </div>\n\t\t\tcategorias.push(scategoria)\n\t\t}\n\t\tthis.setState({categorias,mesa,data:categorias,title:\"Categorias\"})\n\t}\n\tasync _pedidos(nurl){\n\t\tlet req1 = await fetch(url + nurl)\n\t\tlet res1 = await req1.json()\n\t\tvar pedidos = []\n\t\tfor(let pedido of res1){\n\t\t\tvar prod = JSON.parse(pedido.produtos).reverse()\n\t\t\tlet ap = []\n\t\t\tfor(let p of prod){\n\t\t\t\tap.push(<div style={{fontSize:'20px'}} >({p.quantidade}) <strong>{p.nome}</strong> >>> {(p.preco * p.quantidade).toFixed(2)} </div>)\n\t\t\t}\n\t\t\tvar spedido = <Card key={pedido.id_pedido} title={pedido.mesa} data={ap} status={pedido.status} id={pedido.id_pedido} socket={this.state.socket} total={pedido.total.toFixed(2)}/>\n\t\t\tpedidos.push(spedido)\n\t\t}\n\t\tconsole.log(nurl)\n\t\treturn pedidos.reverse()\n\t}\n\tasync componentDidMount(){\n\t\tlet req2 = await fetch(url + '/database/mesas')\n\t\tlet res2 = await req2.json()\n\t\t\n\t\tvar mesas = []\n\t\tfor(let mesa of res2){\n\t\t\tvar smesa = (<div className=\"hand\" onClick={this._getCategorias.bind(this,mesa.nome)} key={mesa.id_mesa} value={mesa.nome}> \n\t\t\t<a className=\"waves-effect waves-light btn modal-trigger\" href=\"#modal1\">{mesa.nome} </a> \n\t\t\t</div>)\n\t\t\tmesas.push(smesa)\n\t\t}\n\t\tlet pedidos = await this._pedidos('/database/pedidos')\n\t\tthis.setState({pedidos,mesas})\n\t\tthis.state.socket.on(\"reload\",async (data)=> this.setState({pedidos:await this._pedidos('/database/pedidos')}))\n\t}\n\tasync _insertPedido(){\n\t\tlet {mesa,garcon,data,status,total,produtos} = this.state\n\t\tlet req = await fetch(url + '/insert/pedidos',{\n\t\t\tmethod:'POST',\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json',\n\t\t\t\t'Accept':'aplication/json'\n\t\t\t},\n\t\t\tbody:JSON.stringify({mesa,garcon,data,status,total,produtos:JSON.stringify(produtos)})\n\t\t})\n\t\tlet res = await req.json()\n\t\tconsole.log(res)\n\t}\n\t_click(){\n\t\tthis._insertPedido()\n\t\tconsole.log(this.state)\n\t}\n\t_table(){\n\t\treturn (\n\t\t<div>\n\t\t\t<table> \n\t\t\t<thead>\n\t\t\t\t<tr> <td> Mesa </td> <td> Preço </td> <td> Quantidade </td> </tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t{this.state.produtos && this.state.produtos.map(p=>{\n\t\t\t\treturn (<tr key={p.id_produto}>\n\t\t\t\t\t\t<td > {p.nome} </td> \n\t\t\t\t\t\t<td> <strong> R$ {p.preco.toFixed(2)}</strong> </td>\n\t\t\t\t\t\t<td> <strong> {p.quantidade} </strong> </td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)}\n\t\t\t</tbody>\n\t\t\t</table>\n\t\t\tPreço total : <span> <strong>R$ {this.state.total} </strong></span>\n\t\t\t<button className=\"btn\" onClick={this._click.bind(this)}>Enviar </button>\n\t\t\t</div>\n\t)\n\t}\n\tasync _change(event){\n\t\tvar pedidos = await this._pedidos('/select/pedidos/id_pedido/'+this.state.search)\n\t\tthis.setState({search:event.target.value})\n\t}\n\trender(){\n\t\n\t  return (\n\t   <div>\n\t\t<div style={{display:\"none\"}}>{this.state.mesas}</div>\n\t\t<div>\n\t\t\t<div style={{display:\"none\"}}> {this._table()} </div>\n\t\t\t<div> <input type=\"text\" placeholder=\"buscar\" onChange={this._change.bind(this)}/></div>\n\t\t\t<div> {this.state.pedidos} </div>\n\t\t\t<Modal title={this.state.title} data={this.state.data}/>\n\t\t</div>\n\t   </div>\n\t  )\n\t}\n}\n\nclass Card extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tstatus:this.props.status,\n\t\t\tarquivado:'block',\n\t\t\tsocket:this.props.socket\n\t\t}\n\t}\n\tasync _preparar(status,id_pedido){\n\t\t\tlet req = await fetch(url + \"/edit/pedidos\",{\n\t\t\t\tmethod:\"POST\",\n\t\t\t\theaders:{\"Content-Type\":\"application/json\"},\n\t\t\tbody:JSON.stringify({coluna1:\"id_pedido\",value1:id_pedido,coluna2:\"status\",value2:status})\n\t\t\t})\n\t\t\tlet res = await req.json()\n\t\t\t\n\t\t\tthis.setState({status})\n\t\t\tthis.state.socket.emit(\"newPedido\")\n\t\t\tthis.state.socket.emit(\"novo_pedido\",{garcon:\"maerli\",id_pedido})\n\t}\n\trender(){\n\t\tvar colors = [\"green\",\"blue\",\"black\",\"yellow\"]\n\t\tvar status = [\"recebido\",\"preparando\",\"pronto\",\"arquivado\"]\n\t\treturn (\n\t\t\t <div className=\"row\" style={{display:this.state.arquivado}}>\n\t\t\t    {this.state.status !== 4 && (<div className=\"col s12 m10\">\n\t\t\t      <div className={\"card \"+colors[this.state.status]+ \" darken-1\"}>\n\t\t\t        <div className=\"card-content white-text\">\n\t\t\t          <span className=\"card-title\"><span className=\"\">Pedido n° {this.props.id}</span></span>\n\t\t\t          <div>\n\t\t\t          <h5> {this.props.title} </h5>\n\t\t\t          \t{this.props.data}\n\t\t\t          \t{status[this.state.status]}<br/>\n\t\t\t          \tValor total do pedido : ({this.props.total})\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t        <div className=\"card-action\">\n\t\t\t          <button className=\"btn\" onClick={this._preparar.bind(this,1,this.props.id)}>Preparar</button>\n\t\t\t          <button className=\"btn red\">Cancelar</button>\n\t\t\t          <button className=\"btn orange\" onClick={this._preparar.bind(this,2,this.props.id)}> Pronto </button>\n\t\t\t          <button className=\"btn grey\" onClick={this._preparar.bind(this,4,this.props.id)}> Arquivar </button>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </div>)}\n  \t\t\t</div>\n\n\t\t)\n\t}\n}\n","import React,{Component} from 'react'\nimport maresia from '../maresia.jpg'\nexport default class Card extends Component{\n\trender(){\n\t\treturn (\n\t\t\t <div className=\"row\">\n\t\t\t\t<div className=\"col s12 m7\">\n\t\t\t\t  <div className=\"card\">\n\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t  <img src={maresia}/>\n\t\t\t\t\t  <span className=\"card-title\">Card Title</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t  <p>I am a very simple card. I am good at containing small bits of information.\n\t\t\t\t\t  I am convenient because I require little markup to use effectively.</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t  <a href=\"/\">This is a link</a>\n\t\t\t\t\t</div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t </div>\n\t\t)\n\t}\n}\n","import React,{Component} from 'react'\nimport Pedidos from './Pedidos'\nimport Card from './Card'\nimport Modal from './Modal'\n\nconst url = window.location.protocol + \"//\" + window.location.hostname + \":4000\"\nexport default class Home extends Component{\n\trender(){\n\t  return (\n\t   <div>\n\t\t<Card/>\n\t\t<Modal/>\n\t\t</div>\n\t  )\n}\n}\n\n","import React,{Component} from 'react';\n\nexport default class Sobre extends Component{\nrender(){\n  return (\n   <div className=\"card\">\n\t<div className=\"card-content\">\n\t\t<div className=\"card-action\">\n\t\t\tEste aplicativo foi desenvolvido por includeSoft.\n\t\t</div>\n\t</div>\n    </div>\n  )\n}\n}\n","import React,{Component} from 'react';\nconst url = window.location.protocol + '//' + window.location.hostname + ':4000'\nexport default class Users extends Component{\nconstructor(props){\n\tsuper(props)\n\tthis.state = {\n\t\tgarcon:null\n\t}\n}\nasync componentDidMount(){\n\tlet req = await fetch(url+'/database/garcon')\n\tlet res = await req.json()\n\tlet garcon = []\n\tfor(let g of res){\n\t\tgarcon.push(<div key={g.id_garco}>{g.nome} {g.sobrenome}</div>)\n\t}\n\tthis.setState({garcon})\n}\nasync _addGarcon(){\n\tvar nome = document.querySelector('#nome').value\n\tvar sobrenome = document.querySelector('#sobrenome').value\n\tvar senha = document.querySelector('#senha').value\n\tvar src = document.querySelector('#src').value\n\tvar dados = {nome,sobrenome,senha,src}\n\tvar req = await fetch(url + '/insert/garcon',{\n\t\tmethod:'POST',\n\t\theaders:{\n\t\t\t'Content-Type':'application/json'\n\t\t},\n\t\tbody:JSON.stringify(dados)\n\t})\n\tvar res = await req.json()\n\tconsole.log(res)\n}\nrender(){\n  return (\n   <div>\n\t<input type=\"text\" id=\"nome\" placeholder=\"nome\"/><br/>\n\t<input type=\"text\" id=\"sobrenome\" placeholder=\"sobrenome\"/><br/>\n\t<input type=\"password\" id=\"senha\" placeholder=\"senha\"/><br/>\n\t<input type=\"hidden\" id=\"src\" value=\"null\"/>\n\t<input type=\"submit\" onClick={this._addGarcon} value=\"Criar\" className=\"btn green\"/>\n\t{this.state.garcon}\n    </div>\n  )\n}\n}\n","import React,{Component} from 'react';\nconst url = window.location.protocol + \"//\" + window.location.hostname + \":4000\"\nexport default class Produtos extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {produtos:null,categorias:null}\n\t}\n\tasync componentDidMount(){\n\t\tlet req1 = await fetch(url + '/database/produtos')\n\t\tlet req2 = await fetch(url + '/database/categorias')\n\t\tlet res1 = await req1.json()\n\t\tlet res2 = await req2.json()\n\t\t//alert(JSON.stringify(res2))\n\t\tvar produtos = []\n\t\tfor(let produto of res1){\n\t\t\tvar sproduto = <div key={produto.id_produto}> {produto.nome} </div>\n\t\t\tprodutos.push(sproduto)\n\t\t}\n\t\tvar categorias = []\n\t\tfor(let categoria of res2){\n\t\t\tvar scategoria = <option key={categoria.id_categoria} value={categoria.nome}> {categoria.nome} </option>\n\t\t\tcategorias.push(scategoria)\n\t\t}\n\t\tthis.setState({produtos,categorias})\n\t}\n\tasync _insertProduto(data){\n\t\tlet req = await fetch(url + '/insert/produtos',{\n\t\t\tmethod:'POST',\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json',\n\t\t\t\t'Accept':'aplication/json'\n\t\t\t},\n\t\t\tbody:data\n\t\t})\n\t\tlet res = await req.json()\n\t\tconsole.log(res)\n\t}\n\t_click(){\n\t\tvar nome = document.querySelector('#nome').value\n\t\tvar categoria = document.querySelector('#categoria').value\n\t\tvar preco = document.querySelector('#preco').value\n\t\tvar descricao = document.querySelector('#descricao').value\n\t\tvar img = document.querySelector('#img').value\n\t\t\n\t\tvar data = JSON.stringify({nome,categoria,preco,descricao,img,categoria})\n\t\tthis._insertProduto(data)\n\t}\n\trender(){\n\t  return (\n\t   <div className=\"col s6\">\n\t  \n\t\t<input id=\"nome\" type=\"text\" placeholder=\"nome\" /> \t\n\t\t<input id=\"preco\" type=\"text\" placeholder=\"preço\" />\n\t\t<div className=\"input-field col s12\">\n\t\t<strong> Categoria </strong>\n\t\t<div className=\"input-field col s12\">\n    <select id=\"categoria\" style={{display:'block'}}>\n    \t <label>Materialize Select</label>\n    \t{this.state.categorias}\n   \n    </select>\n    </div>\n  </div>\n\t\t<textarea id=\"descricao\" placeholder=\"Descrição\"></textarea>\n\t\t<input type=\"hidden\" id=\"img\" value=\"default.png\"/>\n\n\t\t<input className=\"btn waves-effect waves-light\" type=\"button\" onClick={this._click.bind(this)} value=\"Criar\"/>\n\t\t<div id=\"mesas\">\n\t\t\t{this.state.produtos}\n\t\t</div>\n\t\t\n\t\t</div>\n\t  )\n\t}\n}\n","import React,{Component} from 'react';\nconst url = window.location.protocol + \"//\" + window.location.hostname + \":4000\"\nexport default class Mesas extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {mesas:null}\n\t}\n\tasync componentDidMount(){\n\t\tlet req = await fetch(url + '/database/mesas')\n\t\tlet res = await req.json()\n\t\tvar mesas = []\n\t\tfor(let mesa of res){\n\t\t\tvar smesa = <div style={styles.mesa} key={mesa.id_mesa}> {mesa.nome} </div>\n\t\t\tmesas.push(smesa)\n\t\t}\n\t\tthis.setState({mesas})\n\t}\n\tasync _insertMesa(data){\n\t\tlet req = await fetch(url + '/insert/mesas',{\n\t\t\tmethod:'POST',\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json',\n\t\t\t\t'Accept':'aplication/json'\n\t\t\t},\n\t\t\tbody:data\n\t\t})\n\t\tlet res = await req.json()\n\t\tconsole.log(res)\n\t}\n\t_click(){\n\t\tvar nome = document.querySelector('#nome').value\n\t\tvar data = JSON.stringify({nome})\n\t\tthis._insertMesa(data)\n\t}\n\trender(){\n\t  return (\n\t   <div>\n\t\t<input id=\"nome\" type=\"text\" placeholder=\"Nome da mesa\" /> <br/>\n\t\t<input type=\"button\" className=\"btn\" onClick={this._click.bind(this)} value=\"Criar\"/>\n\t\t<div id=\"mesas\">\n\t\t\t{this.state.mesas}\n\t\t</div>\n\t\t</div>\n\t  )\n}\n}\n\nconst styles = {\n\tmesa:{\n\t\tborder:'1px solid gray',\n\t\tpadding:'5px',\n\t\tborderRadius:'10px',\n\t\tmargin:'4px',\n\t\tcursor:'pointer'\n\t}\n}","import React,{Component} from 'react'\nconst url = window.location.protocol + \"//\" +window.location.hostname + ':4000'\nexport default class Auth extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\tasync _verify(){\n\t\tvar user = localStorage.getIytem(\"user\")\n\t\treturn user\n\t}\n\tasync _signin(nome){\n\t\tlocalStorage.setItem(\"user\",nome)\n\t\talert(nome)\n\t}\n\tasync _login(user,senha){\n\t\tvar data = JSON.stringify({user,senha})\n\t\tlet req = await fetch(url + '/garcon',{\n\t\t\tmethod:'POST',\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json',\n\t\t\t\t'Accept':'aplication/json'\n\t\t\t},\n\t\t\tbody:data\n\t\t})\n\t\tlet res = await req.json()\n\t\tif(res.user){\n\t\t\tthis._signin(user)\n\t\t}\n\t}\n\t_click(){\n\t\tvar user = document.querySelector('#user').value\n\t\tvar senha = document.querySelector('#senha').value\n\t\tthis._login(user,senha)\n\t}\n\trender(){\n\t  return (\n\t   <div>\n\t\t\t<div>\n\t\t\t\t<input id=\"user\" type=\"text\" /> <br/>\n\t\t\t\t<input id=\"senha\" type=\"password\" /><br/>\n\t\t\t\t<input className=\"btn\" type=\"button\" onClick={this._click.bind(this)} value=\"entrar\" />\n\t\t\t</div>\n\t\t</div>\n\t  )\n}\n}\n","import React,{Component} from 'react';\nconst url = window.location.protocol + \"//\" + window.location.hostname + \":4000\"\nexport default class Categorias extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {categorias:null}\n\t}\n\tasync componentDidMount(){\n\t\tlet req = await fetch(url + '/database/categorias')\n\t\tlet res = await req.json()\n\t\tvar categorias = []\n\t\tfor(let categoria of res){\n\t\t\tvar scategoria = <div key={categoria.id_categoria}> {categoria.nome} </div>\n\t\t\tcategorias.push(scategoria)\n\t\t}\n\t\tthis.setState({categorias})\n\t}\n\tasync _insertCategoria(data){\n\t\tlet req = await fetch(url + '/insert/categorias',{\n\t\t\tmethod:'POST',\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json',\n\t\t\t\t'Accept':'aplication/json'\n\t\t\t},\n\t\t\tbody:data\n\t\t})\n\t\tlet res = await req.json()\n\t\tconsole.log(res)\n\t}\n\t_click(){\n\t\tvar nome = document.querySelector('#nome').value\n\t\tvar data = JSON.stringify({nome})\n\t\tthis._insertCategoria(data)\n\t}\n\trender(){\n\t  return (\n\t   <div>\n\t\t<input id=\"nome\" type=\"text\" placeholder=\"nome\" /> <br/>\n\t\t<input type=\"button\" className=\"btn\" onClick={this._click.bind(this)} value=\"Criar\"/>\n\t\t<div id=\"categorias\">\n\t\t\t{this.state.categorias}\n\t\t</div>\n\t\t</div>\n\t  )\n}\n}\n","import React,{Component} from 'react'\nimport '../css/pedidos.css'\nimport Modal from './Modal'\nimport socketIOClient from \"socket.io-client\"\n\nconst url = window.location.protocol + \"//\" +window.location.hostname + ':4000'\nexport default class Mobile extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tpedidos:null,mesas:null,categorias:null,sprodutos:null,\n\t\t\tmesa:null,\n\t\t\tgarcon:localStorage.getItem('user'),\n\t\t\tdata:Date.now(),\n\t\t\tstatus:0,\n\t\t\ttotal:0,\n\t\t\tprodutos:[],\n\t\t\ttitle:\"atual\",\n\t\t\tsearch:'',\n\t\t\tsocket:socketIOClient(url)\n\t\t\t}\n\t}\n\tasync _makePedido(produto){\n\t\tvar total = produto.preco\n\t\tlet is_product = false\n\t\tlet p;\n\t\tfor(let i in this.state.produtos){\n\t\t\tp = this.state.produtos.slice()\n\t\t\tif(p[i].id_produto == produto.id_produto){\n\t\t\t\tp[i].quantidade += 1\n\t\t\t\tis_product = true\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif(!is_product){\n\t\t\tproduto.quantidade = 1\n\t\t\tp = this.state.produtos.slice()\n\t\t\tp = p.concat(produto)\n\t\t\tconsole.log(p)\n\t\t}\n\t\t\n\t\tthis.setState({produtos:p,total:this.state.total + total})\n\t}\n\tasync _getProduto(categoria){\n\t\tlet req = await fetch(url + '/select/produtos/categoria/'+categoria)\n\t\tlet res = await req.json()\n\t\tvar sprodutos = []\n\t\tfor(let produto of res){\n\t\t\tvar sproduto = <div className=\"hand\" onClick={this._makePedido.bind(this,produto)} key={produto.id_produto}> {produto.nome} R$ {produto.preco.toFixed(2)}</div>\n\t\t\tsprodutos.push(sproduto)\n\t\t}\n\t\tthis.setState({sprodutos,categoria,title:\"Produtos\",data:sprodutos})\n\t}\n\tasync _getCategorias(mesa){\n\t\tlet req = await fetch(url + '/database/categorias')\n\t\tlet res = await req.json()\n\t\tvar categorias = []\n\t\tfor(let categoria of res){\n\t\t\tvar scategoria = <div className=\"hand\" onClick={this._getProduto.bind(this,categoria.nome)} key={categoria.id_categoria}> {categoria.nome} </div>\n\t\t\tcategorias.push(scategoria)\n\t\t}\n\t\tthis.setState({categorias,mesa,data:categorias,title:\"Categorias\"})\n\t}\n\tasync _pedidos(nurl){\n\t\tlet req1 = await fetch(url + nurl)\n\t\tlet res1 = await req1.json()\n\t\tvar pedidos = []\n\t\tfor(let pedido of res1){\n\t\t\tvar prod = JSON.parse(pedido.produtos).reverse()\n\t\t\tlet ap = []\n\t\t\tfor(let p of prod){\n\t\t\t\tap.push((<div>\n\t\t\t\t\t\tProduto <strong>{p.nome}</strong>\n\t\t\t\t\t\tQuantidade {p.quantidade} <br/>\n\t\t\t\t\t</div>))\n\t\t\t}\n\t\t\tvar spedido = <Card key={pedido.id_pedido} title={pedido.mesa} data={ap} status={pedido.status} total={pedido.total} id={pedido.id_pedido}/>\n\t\t\tpedidos.push(spedido)\n\t\t}\n\t\tpedidos = pedidos.reverse()\n\t\tthis.setState({pedidos})\n\t\treturn pedidos\n\t}\n\tasync componentDidMount(){\n\t\t\n\t\tlet req2 = await fetch(url + '/database/mesas')\n\t\tlet res2 = await req2.json()\n\t\t\n\t\tvar mesas = []\n\t\tfor(let mesa of res2){\n\t\t\tvar smesa = (<div className=\"hand\" onClick={this._getCategorias.bind(this,mesa.nome)} key={mesa.id_mesa} value={mesa.nome}> \n\t\t\t<a className=\"waves-effect waves-light btn modal-trigger\" href=\"#modal1\">{mesa.nome} </a> \n\t\t\t</div>)\n\t\t\tmesas.push(smesa)\n\t\t}\n\t\tawait this._pedidos('/select/pedidos/garcon/'+this.state.garcon)\n\t\tthis.setState({mesas})\n\t\tthis.state.socket.on(\"reload\",async (data)=> this._pedidos('/select/pedidos/garcon/'+this.state.garcon))\n\t}\n\tasync _insertPedido(){\n\t\tlet {mesa,garcon,data,status,total,produtos} = this.state\n\t\tlet req = await fetch(url + '/insert/pedidos',{\n\t\t\tmethod:'POST',\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json',\n\t\t\t\t'Accept':'aplication/json'\n\t\t\t},\n\t\t\tbody:JSON.stringify({mesa,garcon,data,status,total,produtos:JSON.stringify(produtos)})\n\t\t})\n\t\tlet res = await req.json()\n\t\tconsole.log(res)\n\t\tthis.state.socket.emit(\"newPedido\")\n\t}\n\t_click(){\n\t\tthis._insertPedido()\n\t}\n\t_table(){\n\t\treturn (\n\t\t<div>\n\t\t\t<table> \n\t\t\t<thead>\n\t\t\t\t<tr> <td> Mesa </td> <td> Preço </td> <td> Quantidade </td> </tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t{this.state.produtos && this.state.produtos.map(p=>{\n\t\t\t\treturn (<tr key={p.id_produto}>\n\t\t\t\t\t\t<td > {p.nome} </td> \n\t\t\t\t\t\t<td> <strong> R$ {p.preco.toFixed(2)}</strong> </td>\n\t\t\t\t\t\t<td> <strong> {p.quantidade} </strong> </td>\n\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)}\n\t\t\t</tbody>\n\t\t\t</table>\n\t\t\tPreço total : <span> <strong>R$ {this.state.total} </strong></span>\n\t\t\t<button className=\"btn\" onClick={this._click.bind(this)}>Enviar </button>\n\t\t\t</div>\n\t)\n\t}\n\tasync _change(event){\n\t\tvar pedidos = await this._pedidos('/select/pedidos/id_pedido/'+this.state.search)\n\t\tthis.setState({search:event.target.value})\n\t}\n\trender(){\n\t\n\t  return (\n\t   <div>\n\t\t<div >{this.state.mesas}</div>\n\t\t<div>\n\t\t\t<div > {this._table()} </div>\n\t\t\t<div> <input type=\"text\" placeholder=\"buscar\" onChange={this._change.bind(this)}/></div>\n\t\t\t<div> {this.state.pedidos} </div>\n\t\t\t<Modal title={this.state.title} data={this.state.data}/>\n\t\t</div>\n\t   </div>\n\t  )\n\t}\n}\n\nclass Card extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tstatus:this.props.status,\n\t\t\taquivado:'block',\n\t\t\tsocket:this.props.socket\n\t\t}\n\t}\n\tasync _preparar(status,id_pedido){\n\t\tif(status == 4){\n\t\t\tthis.setState({arquivado:'none'})\n\t\t}else{\n\t\t\tlet req = await fetch(url + \"/edit/pedidos\",{\n\t\t\t\tmethod:\"POST\",\n\t\t\t\theaders:{\"Content-Type\":\"application/json\"},\n\t\t\tbody:JSON.stringify({coluna1:\"id_pedido\",value1:id_pedido,coluna2:\"status\",value2:status})\n\t\t\t})\n\t\t\tlet res = await req.json()\n\t\t\tconsole.log(res)\n\t\t\t\n\t\t\tthis.setState({status})\n\t\t}\n\t}\n\trender(){\n\t\tvar colors = [\"green\",\"blue\",\"black\"]\n\t\tvar status = [\"recebido\",\"preparando\",\"pronto\"]\n\t\treturn (\n\t\t\t <div className=\"row\" style={{display:this.state.arquivado}}>\n\t\t\t    <div className=\"col s12 m6\">\n\t\t\t      <div className={\"card \"+colors[this.state.status]+ \" darken-1\"}>\n\t\t\t        <div className=\"card-content white-text\">\n\t\t\t          <span className=\"card-title\">{this.props.title} <span className=\"\">Pedido n° {this.props.id}</span></span>\n\t\t\t          <div>\n\t\t\t          \t{this.props.data}\n\t\t\t          \t{status[this.state.status]}\n\t\t\t\t\tTotal : {this.props.total}\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t        <div className=\"card-action\">\n\n\t\t\t          <button className=\"btn red\">Cancelar</button>\n\t\t\t\t  {this.state.status === 2 && <button className=\"btn grey\" onClick={this._preparar.bind(this,4)}> Arquivar </button>}\n\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </div>\n  \t\t\t</div>\n\n\t\t)\n\t}\n}\n","import React,{Component} from 'react';\nimport './App.css'\nimport { BrowserRouter,Switch, Route, Link} from 'react-router-dom'\nimport Home from './comp/Home'\nimport Sobre from './comp/Sobre'\nimport Users from './comp/Users'\nimport Produtos from './comp/Produtos'\nimport Pedidos from './comp/Pedidos'\nimport Mesas from './comp/Mesas'\nimport Auth from './comp/Auth'\nimport Categorias from './comp/Categorias'\nimport Mobile from './comp/Mobile'\n\nimport './materialize/css/materialize.min.css'\nimport M from  'materialize-css'\n\nwindow.document.addEventListener('DOMContentLoaded', function() {\n    var elems = document.querySelectorAll('.modal');\n    var instances = M.Modal.init(elems);\n  });\n\n\nconst url = 'http://localhost:4000'\nvar user = localStorage.getItem('user')\nexport default class App extends Component{\nrender(){\n  return (\n  \nuser? (<div style={styles.app} className=\"App\">\n<BrowserRouter>\n      <ul>\n\t  <li><Link className=\"active\" to=\"/\">Home</Link></li>\n\t  <li><Link to=\"/desktop/users\">Usuários</Link></li>\n\t  <li><Link to=\"/desktop/mesas\">Mesas</Link></li>\n    <li><Link to=\"/desktop/categorias\">Categorias</Link></li>\n\t  <li><Link to=\"/desktop/produtos\">Produtos</Link></li>\n\t  <li><Link to=\"/desktop/pedidos\"> Pedidos</Link></li>\n    <li><Link to=\"/desktop/mobile\"> Mobile </Link></li>\n\t  <li><Link to=\"/desktop/sobre\">Sobre</Link></li>\n\t</ul>\n\n<Switch>\n    <Route path=\"/desktop\" exact={true} component={Home} />\n    <Route path=\"/desktop/sobre\" component={Sobre} />\n    <Route path=\"/desktop/mesas\" component={Mesas} />\n    <Route path=\"/desktop/users\" component={Users} />\n    <Route path=\"/desktop/produtos\" component={Produtos} />\n    <Route path=\"/desktop/pedidos\" component={Pedidos} />\n    <Route path=\"/desktop/categorias\" component={Categorias} />\n    <Route path=\"/desktop/mobile\" component={Mobile} />\n</Switch> \n</BrowserRouter>\n\t</div>) : (<Auth/>)\n  )\n}\n}\nconst styles = {\n\tapp:{\n\t\tmargin:'5px'\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}