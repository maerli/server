{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["host","window","android","ipAddress","location","protocol","hostname","url","socket","SocketIoClient","document","addEventListener","elems","querySelectorAll","M","Modal","init","dados","mesa","categoria","produtos","garcon","getUser","localStorage","getItem","total","data","Date","now","status","display","reload","comp","setState","cancelar","className","onClick","history","back","inserirPedido","a","async","fetch","method","headers","body","JSON","stringify","req","json","res","console","log","emit","goback","href","App","props","style","footer","position","bottom","left","textAlign","width","color","fontWeight","state","pedido_pronto","on","id_pedido","notification","this","to","path","exact","render","component","Pedidos","backgroundColor","map","produto","key","id_produto","nome","preco","toFixed","quantidade","_hide","bind","Component","pedidos","pedido","prod","parse","reverse","ap","p","push","spedido","title","id","Categorias","categorias","scategoria","id_categoria","fontSize","Mesas","mesas","num_pedidos","req2","res2","smesa","id_mesa","value","Produtos","is_p","toast","displayLength","inDuration","outDuration","html","sproduto","_insert","Button","Card","aquivado","coluna1","value1","coluna2","value2","arquivado","_preparar","Boolean","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2789d50c.chunk.js","sourcesContent":["import React,{Component} from 'react'\nimport './App.css'\nimport './gm.css'\nimport SocketIoClient from 'socket.io-client'\n\nimport './materialize/css/materialize.min.css'\nimport M from  'materialize-css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\nconst host = (window.android && window.android.ipAddress) || (window.location.protocol + \"//\" +window.location.hostname) \nconst url =  host + ':4000'\nconst socket = SocketIoClient(url)\nwindow.document.addEventListener('DOMContentLoaded', function() {\n    var elems = document.querySelectorAll('.modal')\n    var instances = M.Modal.init(elems)\n  })\n\nlet dados ={\n\tmesa:null,\n\tcategoria:null,\n\tprodutos:[],\n\tgarcon:(window.android && window.android.getUser()) || window.localStorage.getItem('user'),\n\ttotal:0,\n\tdata:Date.now(),\n\tstatus:0,\n\tdisplay:'block'\n}\nfunction setDados(){\n\tdados ={\n\t\tmesa:null,\n\t\tcategoria:null,\n\t\tprodutos:[],\n\t\tgarcon:(window.android && window.android.getUser()) || window.localStorage.getItem('user'),\n\t\ttotal:0,\n\t\tdata:Date.now(),\n\t\tstatus:0,\n\t\tdisplay:'block'\n\t}\n}\nfunction reload(comp){\n\tcomp.setState({cancelar:(<div className=\"card horizontal\">\n\t\t<div className=\"card-content\" >\n\t\tSe você sair desta tela seu pedido não será concluído. Sair mesmo assim?<br/>\n\t\t<button onClick={()=> { \n\t\t\twindow.history.back();setDados()}\n\t\t} className=\"btn green\"> Sim </button>\n\t\t<button className=\"btn red\" onClick={() => comp.setState({cancelar:''})}> Não </button>\n\t\t</div>\n\t\t</div>)})\n}\nwindow.goback = (comp)=>{\n\tif(window.location.href === host +':4000/mobile/categorias'){\n\t\treload(comp)\n\t}else{\n\t\twindow.history.back()\n\t}\n}\n\nasync function inserirPedido(){\n\tlet {mesa,garcon,data,status,total,produtos} = dados\n\t\tlet req = await fetch(url + '/insert/pedidos',{\n\t\t\tmethod:'POST',\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json',\n\t\t\t\t'Accept':'aplication/json'\n\t\t\t},\n\t\t\tbody:JSON.stringify({mesa,garcon,data,status,total,produtos:JSON.stringify(produtos)})\n\t\t})\n\t\tlet res = await req.json()\n\t\tconsole.log(res)\n\t\tsocket.emit(\"newPedido\")\n}\n\nclass App extends Component{\n  constructor(props){\n  \tsuper(props)\n  \tthis.state = {\n  \t\tdisplay:dados.display,\n  \t\tpedido_pronto:null\n  \t}\n }\n componentDidMount(){\n \tsocket.on(\"novo_pedido\",async (data)=> {\n \t\tlet req = await fetch(url+'/select/pedidos/id_pedido/'+data.id_pedido)\n \t\tlet res = (await req.json())[0]\n \t\tlet garcon = res.garcon\n \t\tif(res.status === 1){\n \t\t\twindow.android.notification(\"preparado pedido!\",\"Pedido n° \"+res.id_pedido +\" está sendo preparado!\")\n \t\t} \n \t\tif(res.status === 2){\n \t\t\twindow.android.notification(\"Pedido pronto!\",\" Pedido nº \"+res.id_pedido + \" está pronto\") \n \t\t}\n \t\t \t\t\n  \t})\n }\n _hide(){\n\t\tdados.display = dados.display === 'block'?'none':'block'\n\t\tthis.setState({display:dados.display})\n\t}\n\tstyle = {\n\t\tfooter:{\n\t\t\tposition:'absolute',\n\t\t\tbottom:10,\n\t\t\tleft:0,\n\t\t\ttextAlign:'center',\n\t\t\twidth:'100%',\n\t\t\tcolor:'black',\n\t\t\tfontWeight:'bold',\n\t\t}\n\t}\n  render(){\n  return (\n    <div className=\"App\">\n      <Router>\n      <Link to=\"/mobile/pedidos\" > {this.state.pedido_pronto}  </Link>\n      \t<Switch>\n      \t\t<Route path=\"/mobile\" exact={true}  render={()=><Mesas />} />\n      \t\t<Route path=\"/mobile/categorias\" exact={true} render={()=><Categorias mesa={dados.mesa}/>}/>\n      \t\t<Route path=\"/mobile/categorias/produtos\" render={()=><Produtos categoria={dados.categoria} />} />\n      \t\t<Route path=\"/mobile/pedidos\" component={Pedidos} />\n      \t</Switch>\n      \t<Route path=\"/mobile/categorias\" render={()=> (<div> \n      \t\t<footer  style={this.style.footer}>\n\t\t\t\t<div style={{display:this.state.display}} >\n\t\t\t\t<table className=\"card\" style={{backgroundColor:'white'}}>\n\t\t\t\t<thead><tr><th>Produto</th> <th>Valor</th> <th>Quantidade</th></tr></thead>\n\t\t\t\t<tbody>\t{dados.produtos.map((produto)=>{\n\t\t\t\t\treturn (<tr key={produto.id_produto}>\n\t\t\t\t\t\t<td>{produto.nome}</td> <td> R$ {produto.preco.toFixed(2)}</td> <td>{produto.quantidade} </td>\n\t\t\t\t\t</tr>)\n\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\tTotal : R$ {dados.total.toFixed(2)}<br/>\n\t\t\t\t<button className=\"btn blue waves-effect waves-light\" onClick={inserirPedido}>Confirmar  \n\t\t\t\t\t<i className=\"material-icons right\" >send</i>\n\t\t\t\t</button> \n\t\t\t\t<button className=\"btn red waves-effect waves-light\" onClick={inserirPedido}>Cancelar  \n\t\t\t\t\t<i className=\"material-icons right\">cancel</i>\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<button style={{width:'90%'}} className=\"btn green\" onClick={this._hide.bind(this)} >\n\t\t\t\t {this.state.display == 'block' ? (<i className=\"material-icons\">expand_more</i>) : (<i className=\"material-icons\">expand_less</i>)}</button>\n\t\t\t\t\n\t\t\t\t</footer>\n      \t</div>)} />\n      </Router>\n    </div>\n  )\n}\n}\nclass Pedidos extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tpedidos:null\n\t\t}\n\t}\n\tasync componentDidMount(){\n\t\tlet req = await fetch(url + '/select/pedidos/garcon/'+dados.garcon)\n\t\tlet res = await req.json()\n\t\tvar pedidos = []\n\t\tfor(let pedido of res){\n\t\t\tvar prod = JSON.parse(pedido.produtos).reverse()\n\t\t\tlet ap = []\n\t\t\tfor(let p of prod){\n\t\t\t\tap.push((<div>\n\t\t\t\t\t\t({p.quantidade}) <strong>{p.nome}</strong>\n\t\t\t\t\t</div>))\n\t\t\t}\n\t\t\tvar spedido = <Card key={pedido.id_pedido} title={pedido.mesa} data={ap} status={pedido.status} total={pedido.total} id={pedido.id_pedido}/>\n\t\t\tpedidos.push(spedido)\n\t\t}\n\t\tpedidos = pedidos.reverse()\n\t\tthis.setState({pedidos})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t{this.state.pedidos}\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nclass Categorias extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tmesa:this.props.mesa,\n\t\t\tcategorias:null,\n\t\t\tdisplay:dados.display,\n\t\t\tcancelar:''\t\t}\n\t}\n\tasync componentDidMount(){\n\t\tlet req = await fetch(url + '/database/categorias')\n\t\tlet res = await req.json()\n\t\tvar categorias = []\n\t\tfor(let categoria of res){\n\t\t\tvar scategoria = (<div onClick={()=>dados.categoria=categoria.nome}  key={categoria.id_categoria}> \n\t\t\t<Link className=\"card\" style={{fontSize:'18px'}} to=\"/mobile/categorias/produtos\" >{categoria.nome} </Link>\n\t\t\t</div>)\n\t\t\tcategorias.push(scategoria)\n\t\t}\n\t\tthis.setState({categorias})\n\t}\n\t\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button cancelar={this}/>\n\t\t\t\t{this.state.cancelar}\n\t\t\t\t<h3>{this.state.mesa} </h3>\n\t\t\t\t{this.state.categorias}\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Mesas extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {mesas:null,num_pedidos:0}\n\t}\n\tasync componentDidMount(){\n\t\tlet req2 = await fetch(url + '/database/mesas')\n\t\tlet res2 = await req2.json()\n\t\t\n\t\tvar mesas = []\n\t\tfor(let mesa of res2){\n\t\t\tvar smesa = (<div onClick={()=>dados.mesa=mesa.nome} className=\"hand\" key={mesa.id_mesa} value={mesa.nome}> \n\t\t\t<Link className=\"card\" style={{fontSize:'18px'}} to=\"/mobile/categorias\"> {mesa.nome} </Link> \n\t\t\t</div>)\n\t\t\tmesas.push(smesa)\n\t\t}\n\t\tthis.setState({mesas})\n\t \tsocket.on(\"reload\",(data)=>this.setState({num_pedidos:this.state.num_pedidos + 1}))\n\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div >\n\t\t\t\t<h3> Maresias </h3>\n\t\t\t\t{this.state.cancelar}\n\t\t\t\t{this.state.mesas}\n\t\t\t\t<footer style={{fontSize:'32px',position:'absolute',bottom:10,left:0,textAlign:'center',width:'100%'}}>\n\t\t\t\t\t<Link  to=\"/mobile/pedidos\" > Pedidos {this.state.num_pedidos}</Link>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Produtos extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcategoria:this.props.categoria,\n\t\t\tprodutos:null\n\n\t\t}\n\t}\n\t_insert(produto){\n\t\tlet is_p = false\n\t\tfor(let p of dados.produtos){\n\t\t\tif(p.id_produto === produto.id_produto){\n\t\t\t\tis_p = true\n\t\t\t\tp.quantidade += 1\n\t\t\t\tp.total += p.preco\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif(!is_p){\n\t\t\tproduto.quantidade = 1\n\t\t\tdados.produtos.push(produto)\n\t\t\tdados.total += produto.preco\n\t\t}\n\t\tM.toast({displayLength:1000,inDuration:100,outDuration:100,html: produto.quantidade + ' ' +produto.nome + \" adicionado !\"})\n\t}\n\tasync componentDidMount(){\n\t\tconst categoria = this.state.categoria\n\t\tlet req = await fetch(url + '/select/produtos/categoria/'+categoria)\n\t\tlet res = await req.json()\n\t\tvar produtos = []\n\t\tfor(let produto of res){\n\t\t\tvar sproduto = (<div className=\"card\" onClick={()=>this._insert(produto)} key={produto.id_produto}>\n\t\t\t <div className=\"card-content\"> \n\t\t\t \t<div className=\"card-action\" > <i className=\"material-icons left\" >add</i> {produto.nome} R$ {produto.preco.toFixed(2)} </div>\n\t\t\t </div>\n\t\t\t </div>)\n\t\t\tprodutos.push(sproduto)\n\t\t}\n\t\tthis.setState({produtos})\n\t}\n\trender(){\n\t\treturn (<div>\n\t\t<Button/>\n\t\t\t<h3> {this.state.categoria}</h3>\n\t\t\t{this.state.produtos}\n\t\t\t\n\t\t</div>)\n\t}\n}\n\nclass Button extends Component{\n\trender(){\n\t\treturn (<button className=\"btn-floating btn-large waves-effect waves-light blue\" onClick={window.goback.bind(this,this.props.cancelar)}>\n\t\t<i className=\"material-icons\">arrow_back</i>\n\t\t</button>)\n\t}\n}\nclass Card extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tstatus:this.props.status,\n\t\t\taquivado:'block',\n\t\t\tsocket:this.props.socket\n\t\t}\n\t}\n\tasync _preparar(status,id_pedido){\n\t\tlet req = await fetch(url + \"/edit/pedidos\",{\n\t\t\tmethod:\"POST\",\n\t\t\theaders:{\"Content-Type\":\"application/json\"},\n\t\tbody:JSON.stringify({coluna1:\"id_pedido\",value1:id_pedido,coluna2:\"status\",value2:status})\n\t\t})\n\t\tlet res = await req.json()\n\t\tthis.setState({status})\n\t}\n\trender(){\n\t\tvar colors = [\"green\",\"blue\",\"black\"]\n\t\tvar status = [\"recebido\",\"preparando\",\"pronto\"]\n\t\treturn (\n\t\t\t <div className=\"row\" style={{display:this.state.arquivado}}>\n\t\t\t    {this.state.status !== 4 && (<div className=\"col s12 m6\">\n\t\t\t      <div className={\"card \"+colors[this.state.status]+ \" darken-1\"}>\n\t\t\t        <div className=\"card-content white-text\">\n\t\t\t          <span className=\"card-title\">{this.props.title} <span className=\"\">Pedido n° {this.props.id}</span></span>\n\t\t\t          <div>\n\t\t\t          \t{this.props.data}\n\t\t\t          \t{status[this.state.status]}<br/>\n\t\t\t\t\tTotal : {this.props.total}\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t        <div className=\"card-action\">\n\n\t\t\t          <button className=\"btn red\">Cancelar</button>\n\t\t\t\t  {this.state.status === 2 && <button className=\"btn grey\" onClick={this._preparar.bind(this,4)}> Arquivar </button>}\n\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </div>)}\n  \t\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}